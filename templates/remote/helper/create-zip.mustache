/**
 * Create Zip Archive
 *
 * @param $source
 * @param string $zip_name
 * @param bool $base_folder
 * @param array $except
 *
 * @example wp_cli_create_zip_archive(ABSPATH.'/wp-admin', "wp-admin.zip", "wp-admin", array("about.php", "css/about.css", "images/"));
 * @return bool
 */
function wp_cli_create_zip_archive( $source, $zip_name = 'archive.zip', $base_folder = false, $except = array() ) {
	if ( extension_loaded( 'zip' ) ) {

		// Get real path for our folder
		$rootPath = realpath( $source );

		// Initialize archive object
		$zip = new \ZipArchive();
		$zip->open( $zip_name, \ZipArchive::CREATE | \ZipArchive::OVERWRITE );

		// Create recursive directory iterator
		$files = new RecursiveIteratorIterator(
			new RecursiveDirectoryIterator( $rootPath ),
			RecursiveIteratorIterator::LEAVES_ONLY
		);

		foreach ( $files as $name => $file ) {
			// Skip directories (they would be added automatically)
			if ( ! $file->isDir() ) {
				// Get real and relative path for current file
				$filePath     = $file->getRealPath();
				$relativePath = substr( $filePath, strlen( $rootPath ) + 1 );

				//Check except Files Or dir
				$in_zip = true;
				if ( count( $except ) > 0 ) {
					foreach ( $except as $path ) {
						//Check is file or dir
						if ( is_file( $path ) ) {
							if ( in_array( wp_normalize_path( $relativePath ), $except ) ) {
								$in_zip = false;
							}
						} else {
							//Check is dir
							$strlen = strlen( $path );
							if ( substr( wp_normalize_path( $relativePath ), 0, $strlen ) == $path ) {
								$in_zip = false;
							}
						}
					}
				}

				if ( $in_zip === true ) {
					//Check if base Folder
					if ( $base_folder != false ) {
						$relativePath = $base_folder . "/" . $relativePath;
					}

					// Add current file to archive
					$zip->addFile( $filePath, $relativePath );
				}
			}
		}

		// Zip archive will be created only after closing object
		$zip->close();
	} else {
		return false;
	}

	return true;
}
